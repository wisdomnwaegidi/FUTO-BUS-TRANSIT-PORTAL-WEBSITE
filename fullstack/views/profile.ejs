<!DOCTYPE html>
<html lang="en">
  <head>
    <!-- Basic Meta Tags -->
    <meta charset="utf-8" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no" />
    <meta name="keywords" content="" />
    <meta name="description" content="" />
    <meta name="author" content="" />

    <title>Student Profile</title>

    <link rel="icon" href="/favicon/logo.ico" type="image/gif" />
    <link rel="stylesheet" type="text/css" href="/css/bootstrap.css" />
    <link
      href="https://fonts.googleapis.com/css?family=Poppins:400,600,700&display=swap"
      rel="stylesheet" />
    <link href="/css/font-awesome.min.css" rel="stylesheet" />
    <link href="/css/style.css" rel="stylesheet" />
    <link href="/css/responsive.css" rel="stylesheet" />

    <style>
      body {
        background-color: #e9edf5;
        font-family: Arial, sans-serif;
      }
      .container {
        margin-top: 50px;
        max-width: 900px;
        background: white;
        padding: 30px;
        border-radius: 10px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
      .profile-header {
        text-align: center;
        margin-bottom: 30px;
      }
      .profile-header img {
        width: 150px;
        height: 150px;
        border-radius: 50%;
        margin-bottom: 15px;
      }
      .profile-header h2 {
        margin: 0;
      }
      .form-group label {
        font-weight: bold;
      }
      .btn-save {
        background-color: #007bff;
        color: white;
        font-size: 16px;
        padding: 10px 20px;
        border: none;
        border-radius: 5px;
        cursor: pointer;
      }
      .btn-save:hover {
        background-color: #0056b3;
      }

      .file-input {
        display: none;
      }

      .file-upload-label {
        display: inline-block;
        cursor: pointer;
        background-color: #007bff;
        color: #fff;
        padding: 10px 20px;
        border-radius: 5px;
        font-size: 16px;
        text-align: center;
        margin-top: 10px;
      }

      .file-upload-label:hover {
        background-color: #0056b3;
      }

      .file-upload-label:active {
        background-color: #003f7f;
      }

      #uploadButton {
        position: relative;
        bottom: 120px;
        left: 80px;
        color: white;
        background-color: #007bff;
        outline: none;
        border: none;
        padding: 10px 30px;
        margin-top: 4rem;
        cursor: pointer;
        border-radius: 5px;
      }

      .profcon {
        margin-bottom: 10px;
        position: relative;
        bottom: 70px;
        left: 100px;
      }

      /* Toast styles */
      .toast-container {
        position: fixed;
        top: 20px;
        right: 20px;
        z-index: 1050;
      }

      .toast {
        background-color: #007bff;
        color: white;
        padding: 15px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
      }
    </style>
  </head>
  <body>
    <header>
      <nav class="navbar_1">
        <div class="container__1">
          <a href="/" class="img_anchor">
            <img
              src="/images/futo logo.jpg"
              alt="futo logo"
              class="futo_logo" />
          </a>
          <h1 class="h4">Futo Shuttle Transport</h1>
        </div>
      </nav>
    </header>

    <div class="container">
      <div class="profile-header">
        <% if (user && user.profilePicture && user.profilePicture !== '') { %>
        <img src="<%= user.profilePicture %>" alt="Profile Picture" />
        <% } else { %>
        <img src="/uploads/userimage.png" alt="Default Profile Picture" />
        <% } %>
        <h2 id="userNames">
          <%= user ? `${user.firstName} ${user.lastName}` : 'First Name Last Name' %>
        </h2>
        <p id="userAdress"><%= user ? user.address : 'Address not provided' %></p>
      </div>

      <!-- Form for uploading a profile picture -->
      <div class="container">
        <form id="profileForm" enctype="multipart/form-data">
          <div class="file-upload-wrapper" style="position: relative">
            <img
              src="<%= user.profilePicture %>"
              alt="Profile Picture"
              id="imagePreview"
              style="
                width: 15rem;
                height: 15rem;
                border-radius: 100%;
              " />

            <div>
              <div class="profcon">
                <input
                  type="file"
                  id="profilePicture"
                  name="profilePicture"
                  accept=".jpeg,.jpg"
                  class="file-input" />
                <label for="profilePicture" class="file-upload-label">
                  <i class="fa fa-upload" aria-hidden="true"></i>
                </label>
              </div>
            </div>
            <button type="submit" id="uploadButton" disabled style="display: none;">Save</button>
          </div>
        </form>
        <div id="message"></div>
      </div>
     

      <!-- profile details -->
      <form
        action="/profile/<%= user._id %>/details"
        id="uploadForm" method="post">
        <div class="form-group">
          <label for="firstName">First name</label>
          <input
            type="text"
            class="form-control"
            id="firstName"
            name="firstName"
            value="<%= user.firstName %>" />
        </div>
        <div class="form-group">
          <label for="lastName">Last name</label>
          <input
            type="text"
            class="form-control"
            id="lastName"
            name="lastName"
            value="<%= user.lastName %>" />
        </div>
        <div class="form-group">
          <label for="email">Email address</label>
          <input
            type="email"
            class="form-control"
            id="email"
            name="email"
            value="<%= user.email %>" />
        </div>
        <div class="form-group">
          <label for="address">Address</label>
          <input
            type="text"
            class="form-control"
            id="address"
            name="address"
            value="<%= user.address %>" />
        </div>
        <button type="submit" class="btn-save">SAVE DETAILS</button>
        <div id="messageone"></div>
      </form>
      


    <!-- <script>
      document.addEventListener("DOMContentLoaded", function () {
        const profilePictureInput = document.getElementById("profilePicture");
        const imagePreview = document.getElementById("imagePreview");
        const uploadButton = document.getElementById("uploadButton");
        const profileForm = document.getElementById("profileForm");
        const uploadForm = document.getElementById("uploadForm");
        const messageElement = document.getElementById("message");
        const messageElementOne = document.getElementById("messageone");
        const toastMessage = document.getElementById("toastMessage");

        profilePictureInput.addEventListener("change", function (event) {
          const file = event.target.files[0];
          if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
              imagePreview.src = e.target.result;
            };
            reader.readAsDataURL(file);
            uploadButton.style.display = "block";
            uploadButton.disabled = false;
          }
        });

        profileForm.addEventListener("submit", async function (event) {
          event.preventDefault();

          const formData = new FormData(profileForm);
          const url = `/profile/<%= user._id %>/picture`;

          try {
            const response = await fetch(url, {
              method: "PUT",
              body: formData,
            });

            if (!response.ok) {
              throw new Error(
                "An error occurred while uploading the profile picture."
              );
            }

            const data = await response.json();
            messageElement.textContent = data.message;
          } catch (error) {
            console.error("Error:", error);
            messageElement.textContent =
              error.message ||
              "An error occurred while uploading the profile picture.";
          }
        });

        uploadForm.addEventListener("submit", async (event) => {
          event.preventDefault();

          const formData = new FormData(uploadForm);
          const formObject = Object.fromEntries(formData.entries())
          const url = `/profile/<%= user._id %>/details`;

          try {
            const response = await fetch(url, {
              method: "PUT",
              credentials: "include",
              body: formObject,
            });

            if (!response.ok) {
              throw new Error("Error updating profile");
            }

            const data = await response.json();
            console.log(data);

            // Update the UI with the new user details
            document.getElementById("firstName").value = data.user.firstName;
            document.getElementById("lastName").value = data.user.lastName;
            document.getElementById("email").value = data.user.email;
            document.getElementById("address").value = data.user.address;

            toastMessage.textContent = data.message;
            toastMessage.style.display = "block";
            setTimeout(() => {
              toastMessage.style.display = "none";
            }, 3000); // 3 seconds
          } catch (error) {
            console.error("Error:", error);
            messageElementOne.textContent = error.message || "Error updating profile";
          }
        });
      });
    </script> -->

    <script>
      document.addEventListener("DOMContentLoaded", function () {
        const profilePictureInput = document.getElementById("profilePicture");
        const imagePreview = document.getElementById("imagePreview");
        const uploadButton = document.getElementById("uploadButton");
        const profileForm = document.getElementById("profileForm");
        const uploadForm = document.getElementById("uploadForm");
        const messageElement = document.getElementById("message");
        const messageElementOne = document.getElementById("messageone");
        const userNames = document.getElementById('userNames');
        const userAddress = document.getElementById('userAddress');

        profilePictureInput.addEventListener("change", function (event) {
          const file = event.target.files[0];
          if (file) {
            const reader = new FileReader();
            reader.onload = function (e) {
              imagePreview.src = e.target.result;
            };
            reader.readAsDataURL(file);
            uploadButton.style.display = "block";
            uploadButton.disabled = false;
          }
        });

        profileForm.addEventListener("submit", async function (event) {
          event.preventDefault();

          const formData = new FormData(profileForm);
          const url = `/profile/<%= user ? user._id : '' %>/picture`;

          try {
            const response = await fetch(url, {
              method: "PUT",
              body: formData,
            });

            if (!response.ok) {
              throw new Error(
                "An error occurred while uploading the profile picture."
              );
            }

            const data = await response.json();
            messageElement.textContent = data.message;

            setTimeout(()=>{
              messageElement.style.display ="none";
            }, 3000)
            
            imagePreview.src = data.user.profilePicture;
          } catch (error) {
            console.error("Error:", error);
            messageElement.textContent =
              error.message ||
              "An error occurred while uploading the profile picture.";
          }
        });

        uploadForm.addEventListener("submit", async (event) => {
          event.preventDefault();

          const formData = new FormData(uploadForm);
          const formObject = Object.fromEntries(formData.entries());

          console.log("Form data being sent:", formObject);

          const url = `/profile/<%= user ? user._id : '' %>/details`;

          try {
            const response = await fetch(url, {
              method: "PUT",
              headers: {
                "Content-Type": "application/json",
              },
              body: JSON.stringify(formObject),
            });

            if (!response.ok) {
              throw new Error("Error updating profile");
            }

            const data = await response.json();
            console.log("Server response:", data);

           
              messageElementOne.textContent = data.message;
              setTimeout(() => {
                messageElementOne.style.display = "none";
              }, 3000);
           
           

            // Re-render the profile details
            document.getElementById("firstName").value = data.user.firstName;
            document.getElementById("lastName").value = data.user.lastName;
            document.getElementById("email").value = data.user.email;
            document.getElementById("address").value = data.user.address;
          
            // userNames.textContent = `${data.user.firstName} ${data.user.lastName}`;
            // userAddress.textContent = data.user.address;
          } catch (error) {
            console.error("Error:", error);
            messageElementOne.textContent = error.message || "Error updating profile";
          
          }
        });
      });
    </script>

    <!-- jQuery -->
    <script src="/js/jquery-3.4.1.min.js"></script>

    <!-- bootstrap js -->
    <script src="/js/bootstrap.js"></script>
    
  </body>
</html>
